from readchar import readkey
import os
class Juego:
    def __init__(self, mapa:str, posIni:tuple[int, int], posFinal:tuple[int, int]):
        self.mapa = self.convierteMatriz(mapa)
        self.posIni = posIni
        self.posFinal = posFinal
        self.nombre_jugador = self.nombreJugador()
        self.iniJuego(self.mapa, self.posIni, self.posFinal)

    def get_mapa(self):
        return self.mapa

    def set_mapa(self, value):
        self.mapa = value

    def get_posIni(self):
        return self.posIni

    def set_posIni(self, value):
        self.posIni = value

    def get_posFinal(self):
        return self.posFinal

    def set_posFinal(self, value):
        self.posFinal = value

    def get_nombre_jugador(self):
        return self.nombre_jugador

    def set_nombre_jugador(self, value):
        self.nombre_jugador = value

   
    def nombreJugador(self):
        nombre_jugador = input("Ingresa tu nombre: ")
        print("Bienvenido," + nombre_jugador + "\nDisfruta la partida!")
        return nombre_jugador

    def convierteMatriz(self, lab:str):
        matriz = []
        for linea in lab.split("\n"):
            matriz.append(list(linea))
        #print(matriz)
        return matriz

    def clear(self):
        os.system('cls' if os.name=='nt' else 'clear')

    def mostrar(self, mapa:list):
        self.clear()
        #join in cadenas
        for fila in mapa:
            linea = ""
            for char in fila:
                linea += char
            print(linea)

    def iniJuego(self, mapa:list, posIni:tuple[int, int], posFinal:tuple[int, int]):
        px = posIni[0]
        py = posIni[1]

        pxf = posFinal[0]
        pyf = posFinal[1]
        
        mapa[px][py] = "P"
        mapa[pxf][pyf] = "."
        self.mostrar(mapa)

        while True:
            tecla = readkey()
            if tecla.encode() == b'\x00H': # Se presionó la tecla ↑ (flecha hacia arriba)
                #print("px: " + str(px))
                #print("py: " + str(py))
                if px-1 >= 0 and mapa[px-1][py] == "#":
                    print("No puedo avanzar hacia una pared")
                elif px-1 >= 0 and mapa[px-1][py] == ".":
                    print("Voy a avanzar hacia arriba")
                    mapa[px][py] = "."
                    px = px - 1
                    mapa[px][py] = "P"
                    self.mostrar(mapa) 
                else:
                    print("No puedo salir del laberinto :c")
            
            elif tecla.encode() == b'\x00P': # Se presionó  la tecla ↓ (flecha hacia abajo)
                nro_filas = len(mapa) # dimensiones verticales 
                if px+1 < nro_filas and mapa[px+1][py] == "#":
                    print("No puedo avanzar hacia una pared")
                elif px+1 < nro_filas and mapa[px+1][py] == ".":
                    print("Voy a avanzar hacia abajo")
                    mapa[px][py] = "."
                    px = px + 1
                    mapa[px][py] = "P"
                    self.mostrar(mapa) 
                else:
                    print("No puedo salir del laberinto :c")

            elif tecla.encode() == b'\x00M': # Se presionó la tecla → (flecha hacia la derecha)
                nro_columnas= len(mapa[0]) # dimensiones horizontales
                if py+1 < nro_columnas and mapa[px][py+1] == "#":
                    print("No puedo avanzar hacia una pared")
                elif py+1 < nro_columnas and mapa[px][py+1] == ".":
                    print("Voy a avanzar hacia la derecha")
                    mapa[px][py] = "."
                    py = py + 1
                    mapa[px][py] = "P"
                    self.mostrar(mapa) 
                else:
                    print("No puedo salir del laberinto :c")
                
            elif tecla.encode() == b'\x00K': # Se presionó la tecla ← (flecha hacia la izquierda)
                if py-1 >= 0 and mapa[px][py-1] == "#":
                    print("No puedo avanzar hacia una pared")
                elif py-1 >= 0 and mapa[px][py-1] == ".":
                    print("Voy a avanzar hacia la izquierda")
                    mapa[px][py] = "."
                    py = py - 1
                    mapa[px][py] = "P"
                    self.mostrar(mapa) 
                else:
                    print("No puedo salir del laberinto :c")
            else:
                print(f"se presionó la tecla: {tecla}")
                break

#if __name__ == '__main__':
 #   main(mapa, (1, 0), (0, 0))

lab = """..###################
..#.............#.#.#
#.#######.#####.#.#.#
#...........#.....#.#
#.###.#.#.#.###.###.#
#.#.#.#.#.#.#.....#.#
#.#.#.#####.#####.#.#
#.#.......#.....#...#
#####.###.#####.###.#
#.#.....#.#.#.....#.#
#.#.#####.#.#####.#.#
#.....#.......#.#.#.#
###########.#.#.#####
#.#.......#.#.....#.#
#.#######.#.#.###.#.#
#...#.#.....#.#.#...#
#.###.#.#.###.#.#.#.#
#...#...#.#.#.#.#.#.#
###.###.###.###.###.#
#.......#...........#
###################.#"""
posIni = (1,0)
posFinal = (0,0)

def main():
    laberinto = Juego(lab, posIni, posFinal)

main()